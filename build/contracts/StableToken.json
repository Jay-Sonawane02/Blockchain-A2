{
  "contractName": "StableToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "initialOwner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/StableToken.sol\":\"StableToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"project:/contracts/StableToken.sol\":{\"keccak256\":\"0xe73700ac3679e8f7b5fbe71af3a47824638fc916513774f46c07c588eb8fb85c\",\"urls\":[\"bzz-raw://34f66fa75cf501a1ad50bcd80589961b938afa034a7a3bda95424a1f61024d42\",\"dweb:/ipfs/QmT2CZ4m74VhMYj2GncSQjutwEf8h8fdDTGQBi5c7uBXKs\"]}},\"version\":1}",
  "bytecode": "0x6080604052346200037a5762000dc9803803806200001d816200037e565b92833981016060828203126200037a5781516001600160401b0391908281116200037a57816200004f918501620003a4565b602091828501518481116200037a576040916200006e918701620003a4565b9401516001600160a01b039485821694918590036200037a57825182811162000285576003918254916001958684811c941680156200036f575b888510146200035b578190601f9485811162000308575b508890858311600114620002a5575f9262000299575b50505f1982861b1c191690861b1783555b8051938411620002855760049586548681811c911680156200027a575b8282101462000267578381116200021f575b5080928511600114620001b557509383949184925f95620001a9575b50501b925f19911b1c19161781555b8115620001925750600580546001600160a01b03198116831790915560405192167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a36109b49081620004158239f35b6024905f60405191631e4fbdf760e01b8352820152fd5b015193505f8062000131565b92919084601f198116885f52855f20955f905b89838310620002045750505010620001ea575b50505050811b01815562000140565b01519060f8845f19921b161c191690555f808080620001db565b858701518955909701969485019488935090810190620001c8565b875f52815f208480880160051c8201928489106200025d575b0160051c019087905b8281106200025157505062000115565b5f815501879062000241565b9250819262000238565b602288634e487b7160e01b5f525260245ffd5b90607f169062000103565b634e487b7160e01b5f52604160045260245ffd5b015190505f80620000d5565b90889350601f19831691875f528a5f20925f5b8c828210620002f15750508411620002d9575b505050811b018355620000e6565b01515f1983881b60f8161c191690555f8080620002cb565b8385015186558c97909501949384019301620002b8565b909150855f52885f208580850160051c8201928b861062000351575b918a91869594930160051c01915b82811062000342575050620000bf565b5f81558594508a910162000332565b9250819262000324565b634e487b7160e01b5f52602260045260245ffd5b93607f1693620000a8565b5f80fd5b6040519190601f01601f191682016001600160401b038111838210176200028557604052565b919080601f840112156200037a5782516001600160401b0381116200028557602090620003da601f8201601f191683016200037e565b928184528282870101116200037a575f5b818110620004005750825f9394955001015290565b8581018301518482018401528201620003eb56fe60806040818152600480361015610014575f80fd5b5f92833560e01c90816306fdde031461070b57508063095ea7b31461066257806318160ddd1461064357806323b872dd14610551578063313ce5671461053557806340c10f191461048657806370a082311461044f578063715018a6146103ef5780638da5cb5b146103c657806395d89b41146102a65780639dc29fac146101ca578063a9059cbb14610199578063dd62ed3e1461014c5763f2fde38b146100ba575f80fd5b34610148576020366003190112610148576100d3610847565b906100dc610877565b6001600160a01b03918216928315610132575050600554826bffffffffffffffffffffffff60a01b821617600555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b5050346101955780600319360112610195578060209261016a610847565b610172610861565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b5050346101955780600319360112610195576020906101c36101b9610847565b60243590336108a3565b5160018152f35b508290346101955782600319360112610195576101e5610847565b90602435906101f2610877565b6001600160a01b03831692831561028f5783855284602052858520549183831061025b5750508184957fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef936020938688528785520381872055816002540360025551908152a380f35b865163391434e360e21b81526001600160a01b03909216908201908152602081018390526040810184905281906060010390fd5b8551634b637e8f60e11b8152808301869052602490fd5b50919034610195578160031936011261019557805190828454600181811c908083169283156103bc575b60209384841081146103a95783885290811561038d5750600114610338575b505050829003601f01601f191682019267ffffffffffffffff8411838510176103255750829182610321925282610800565b0390f35b634e487b7160e01b815260418552602490fd5b8787529192508591837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b83851061037957505050508301015f80806102ef565b805488860183015293019284908201610363565b60ff1916878501525050151560051b84010190505f80806102ef565b634e487b7160e01b895260228a52602489fd5b91607f16916102d0565b50503461019557816003193601126101955760055490516001600160a01b039091168152602090f35b833461044c578060031936011261044c57610408610877565b600580546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5050346101955760203660031901126101955760209181906001600160a01b03610477610847565b16815280845220549051908152f35b5090346101485780600319360112610148576104a0610847565b90602435916104ad610877565b6001600160a01b0316928315610520576002549083820180921161050d575084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9260209260025585855284835280852082815401905551908152a380f35b634e487b7160e01b865260119052602485fd5b84602492519163ec442f0560e01b8352820152fd5b5050346101955781600319360112610195576020905160128152f35b50823461044c57606036600319011261044c5761056c610847565b610574610861565b916044359360018060a01b038316808352600160205286832033845260205286832054915f1983106105af575b6020886101c38989896108a3565b8683106106175781156106005733156105e9575082526001602090815286832033845281529186902090859003905582906101c3876105a1565b8751634a1406b160e11b8152908101849052602490fd5b875163e602df0560e01b8152908101849052602490fd5b8751637dc7a0d960e11b8152339181019182526020820193909352604081018790528291506060010390fd5b5050346101955781600319360112610195576020906002549051908152f35b503461014857816003193601126101485761067b610847565b6024359033156106f4576001600160a01b03169182156106dd57508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8351634a1406b160e11b8152908101859052602490fd5b835163e602df0560e01b8152808401869052602490fd5b849150833461014857826003193601126101485782600354600181811c908083169283156107f6575b60209384841081146103a9578388529081156107da575060011461078457505050829003601f01601f191682019267ffffffffffffffff8411838510176103255750829182610321925282610800565b600387529192508591837fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8385106107c657505050508301018580806102ef565b8054888601830152930192849082016107b0565b60ff1916878501525050151560051b84010190508580806102ef565b91607f1691610734565b602080825282518183018190529093925f5b82811061083357505060409293505f838284010152601f8019910116010190565b818101860151848201604001528501610812565b600435906001600160a01b038216820361085d57565b5f80fd5b602435906001600160a01b038216820361085d57565b6005546001600160a01b0316330361088b57565b60405163118cdaa760e01b8152336004820152602490fd5b916001600160a01b03808416928315610966571692831561094e575f908382528160205260408220549083821061091c575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60405163ec442f0560e01b81525f6004820152602490fd5b604051634b637e8f60e11b81525f6004820152602490fdfea26469706673582212205e3fe6263cd7a6881ee8a1f8fc0c5b32479e79c2eb187b49edb9cbf30104c75664736f6c63430008150033",
  "deployedBytecode": "0x60806040818152600480361015610014575f80fd5b5f92833560e01c90816306fdde031461070b57508063095ea7b31461066257806318160ddd1461064357806323b872dd14610551578063313ce5671461053557806340c10f191461048657806370a082311461044f578063715018a6146103ef5780638da5cb5b146103c657806395d89b41146102a65780639dc29fac146101ca578063a9059cbb14610199578063dd62ed3e1461014c5763f2fde38b146100ba575f80fd5b34610148576020366003190112610148576100d3610847565b906100dc610877565b6001600160a01b03918216928315610132575050600554826bffffffffffffffffffffffff60a01b821617600555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b5050346101955780600319360112610195578060209261016a610847565b610172610861565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b5050346101955780600319360112610195576020906101c36101b9610847565b60243590336108a3565b5160018152f35b508290346101955782600319360112610195576101e5610847565b90602435906101f2610877565b6001600160a01b03831692831561028f5783855284602052858520549183831061025b5750508184957fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef936020938688528785520381872055816002540360025551908152a380f35b865163391434e360e21b81526001600160a01b03909216908201908152602081018390526040810184905281906060010390fd5b8551634b637e8f60e11b8152808301869052602490fd5b50919034610195578160031936011261019557805190828454600181811c908083169283156103bc575b60209384841081146103a95783885290811561038d5750600114610338575b505050829003601f01601f191682019267ffffffffffffffff8411838510176103255750829182610321925282610800565b0390f35b634e487b7160e01b815260418552602490fd5b8787529192508591837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b83851061037957505050508301015f80806102ef565b805488860183015293019284908201610363565b60ff1916878501525050151560051b84010190505f80806102ef565b634e487b7160e01b895260228a52602489fd5b91607f16916102d0565b50503461019557816003193601126101955760055490516001600160a01b039091168152602090f35b833461044c578060031936011261044c57610408610877565b600580546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5050346101955760203660031901126101955760209181906001600160a01b03610477610847565b16815280845220549051908152f35b5090346101485780600319360112610148576104a0610847565b90602435916104ad610877565b6001600160a01b0316928315610520576002549083820180921161050d575084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9260209260025585855284835280852082815401905551908152a380f35b634e487b7160e01b865260119052602485fd5b84602492519163ec442f0560e01b8352820152fd5b5050346101955781600319360112610195576020905160128152f35b50823461044c57606036600319011261044c5761056c610847565b610574610861565b916044359360018060a01b038316808352600160205286832033845260205286832054915f1983106105af575b6020886101c38989896108a3565b8683106106175781156106005733156105e9575082526001602090815286832033845281529186902090859003905582906101c3876105a1565b8751634a1406b160e11b8152908101849052602490fd5b875163e602df0560e01b8152908101849052602490fd5b8751637dc7a0d960e11b8152339181019182526020820193909352604081018790528291506060010390fd5b5050346101955781600319360112610195576020906002549051908152f35b503461014857816003193601126101485761067b610847565b6024359033156106f4576001600160a01b03169182156106dd57508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8351634a1406b160e11b8152908101859052602490fd5b835163e602df0560e01b8152808401869052602490fd5b849150833461014857826003193601126101485782600354600181811c908083169283156107f6575b60209384841081146103a9578388529081156107da575060011461078457505050829003601f01601f191682019267ffffffffffffffff8411838510176103255750829182610321925282610800565b600387529192508591837fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8385106107c657505050508301018580806102ef565b8054888601830152930192849082016107b0565b60ff1916878501525050151560051b84010190508580806102ef565b91607f1691610734565b602080825282518183018190529093925f5b82811061083357505060409293505f838284010152601f8019910116010190565b818101860151848201604001528501610812565b600435906001600160a01b038216820361085d57565b5f80fd5b602435906001600160a01b038216820361085d57565b6005546001600160a01b0316330361088b57565b60405163118cdaa760e01b8152336004820152602490fd5b916001600160a01b03808416928315610966571692831561094e575f908382528160205260408220549083821061091c575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60405163ec442f0560e01b81525f6004820152602490fd5b604051634b637e8f60e11b81525f6004820152602490fdfea26469706673582212205e3fe6263cd7a6881ee8a1f8fc0c5b32479e79c2eb187b49edb9cbf30104c75664736f6c63430008150033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "141:558:8:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;141:558:8;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;141:558:8;;;;;;;;;;;;;;;;;;1648:13:2;141:558:8;;;;;;;;;;;;;;;;-1:-1:-1;141:558:8;;;;;;;;;;;;;;;-1:-1:-1;141:558:8;;;;;;;;;;-1:-1:-1;141:558:8;;;;-1:-1:-1;;;;141:558:8;;;;;;;;;;;;;;;;;;;;1671:17:2;141:558:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;141:558:8;;;;;;;;;;;;;;;;;;;1273:26:0;;1269:95;;-1:-1:-1;3004:6:0;141:558:8;;-1:-1:-1;;;;;;141:558:8;;;;;;;;;;;3052:40:0;-1:-1:-1;;3052:40:0;141:558:8;;;;;;;1269:95:0;141:558:8;;-1:-1:-1;141:558:8;;1322:31:0;;;;;;;;141:558:8;1322:31:0;141:558:8;;;;-1:-1:-1;141:558:8;;;;;;;;;;;;;;-1:-1:-1;141:558:8;;-1:-1:-1;141:558:8;;-1:-1:-1;141:558:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;141:558:8;;;;;;;;-1:-1:-1;141:558:8;;-1:-1:-1;141:558:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;141:558:8;;;;;;;;;;;;;;;;;;;;-1:-1:-1;141:558:8;;;-1:-1:-1;141:558:8;;;;;;;;;;;;-1:-1:-1;141:558:8;;1671:17:2;141:558:8;;-1:-1:-1;141:558:8;;;;;-1:-1:-1;141:558:8;;;;;;;;;;;;;;;-1:-1:-1;141:558:8;;-1:-1:-1;141:558:8;;-1:-1:-1;141:558:8;;;;;;;;;;-1:-1:-1;141:558:8;;;;;;;;;;;;;;;;-1:-1:-1;;141:558:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;141:558:8;;-1:-1:-1;141:558:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;141:558:8;;;;-1:-1:-1;141:558:8;;;;;;;;;;;;;;;;-1:-1:-1;141:558:8;;;;;-1:-1:-1;141:558:8;;;;;;;;;-1:-1:-1;141:558:8;;;;;;;;;-1:-1:-1;;141:558:8;;;-1:-1:-1;;;;;141:558:8;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;141:558:8;;;;;;;;;;-1:-1:-1;;141:558:8;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;141:558:8;;;;;;;;-1:-1:-1;141:558:8;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "141:558:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;141:558:8;;;;;;:::i;:::-;1500:62:0;;;:::i;:::-;-1:-1:-1;;;;;141:558:8;;;;2627:22:0;;2623:91;;141:558:8;;3004:6:0;141:558:8;;;;;;;;3004:6:0;141:558:8;;3052:40:0;;;;141:558:8;;2623:91:0;141:558:8;-1:-1:-1;;;2672:31:0;;;;;141:558:8;;;;;2672:31:0;141:558:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;141:558:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3388:5:2;141:558:8;;:::i;:::-;;;735:10:5;;3388:5:2;:::i;:::-;141:558:8;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;1500:62:0;;;:::i;:::-;-1:-1:-1;;;;;141:558:8;;;7958:21:2;;7954:89;;141:558:8;;;;;;;;;;6244:19:2;;;;6240:115;;141:558:8;;;;;6987:25:2;141:558:8;;;;;;;;;;;;;;;6714:21:2;141:558:8;;6714:21:2;141:558:8;;;;;6987:25:2;141:558:8;;6240:115:2;141:558:8;;-1:-1:-1;;;6290:50:2;;-1:-1:-1;;;;;141:558:8;;;6290:50:2;;;141:558:8;;;;;;;;;;;;;;;;;;;6290:50:2;;;7954:89;141:558:8;;-1:-1:-1;;;8002:30:2;;;;;141:558:8;;;;;8002:30:2;141:558:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;141:558:8;;;;;-1:-1:-1;;141:558:8;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;141:558:8;;;;;;;;;;;;;;-1:-1:-1;141:558:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;141:558:8;;;;;-1:-1:-1;;141:558:8;;;;;;;;-1:-1:-1;141:558:8;;;;;;-1:-1:-1;;;141:558:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1710:6:0;141:558:8;;;-1:-1:-1;;;;;141:558:8;;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;3004:6;141:558:8;;-1:-1:-1;;;;;;141:558:8;;;;;;;-1:-1:-1;;;;;141:558:8;3052:40:0;141:558:8;;3052:40:0;141:558:8;;;;;;;;;;;;;-1:-1:-1;;141:558:8;;;;;;;;-1:-1:-1;;;;;141:558:8;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;1500:62:0;;;:::i;:::-;-1:-1:-1;;;;;141:558:8;;7432:21:2;;7428:91;;6137:21;141:558:8;;;;;;;;;;;;;6987:25:2;141:558:8;;;6137:21:2;141:558:8;;;;;;;;;;;;;;;;;;;;6987:25:2;141:558:8;;;-1:-1:-1;;;141:558:8;;;;;;;;7428:91:2;141:558:8;;;;7476:32:2;;;;;;;;141:558:8;7476:32:2;141:558:8;;;;;;;;;;;;;;;;;2761:2:2;141:558:8;;;;;;;;;;;-1:-1:-1;;141:558:8;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;735:10:5;141:558:8;;;;;;;;10503:17:2;;;10484:36;;10480:309;;141:558:8;;4890:5:2;;;;;;:::i;10480:309::-;10540:24;;;10536:130;;9717:19;;9713:89;;735:10:5;9815:21:2;9811:90;;-1:-1:-1;141:558:8;;;;;;;;;;735:10:5;141:558:8;;;;;;;;;;;;;;;;4890:5:2;10480:309;;;9811:90;141:558:8;;-1:-1:-1;;;9859:31:2;;;;;141:558:8;;;;;9859:31:2;9713:89;141:558:8;;-1:-1:-1;;;9759:32:2;;;;;141:558:8;;;;;9759:32:2;10536:130;141:558:8;;-1:-1:-1;;;10591:60:2;;735:10:5;10591:60:2;;;141:558:8;;;;;;;;;;;;;;;;;;-1:-1:-1;141:558:8;;6290:50:2;;;141:558:8;;;;;;;;;;;;;;;;2881:12:2;141:558:8;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;735:10:5;;9717:19:2;9713:89;;-1:-1:-1;;;;;141:558:8;;9815:21:2;;9811:90;;735:10:5;;;141:558:8;735:10:5;;141:558:8;;8746:4:2;141:558:8;;;;;;;;;;;;;;;;;9989:31:2;735:10:5;;9989:31:2;;141:558:8;8746:4:2;141:558:8;;;9811:90:2;141:558:8;;-1:-1:-1;;;9859:31:2;;;;;141:558:8;;;;;9859:31:2;9713:89;141:558:8;;-1:-1:-1;;;9759:32:2;;;;;141:558:8;;;;;9759:32:2;141:558:8;;;;;;;;;;;;;;;;;1837:5:2;141:558:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;141:558:8;;;;;-1:-1:-1;;141:558:8;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1837:5:2;141:558:8;;;;-1:-1:-1;141:558:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;141:558:8;;;;;-1:-1:-1;;141:558:8;;;;;;;;-1:-1:-1;141:558:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;141:558:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;141:558:8;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;141:558:8;;;;;;:::o;1796:162:0:-;1710:6;141:558:8;-1:-1:-1;;;;;141:558:8;735:10:5;1855:23:0;1851:101;;1796:162::o;1851:101::-;141:558:8;;-1:-1:-1;;;1901:40:0;;735:10:5;1901:40:0;;;141:558:8;;;1901:40:0;5297:300:2;;-1:-1:-1;;;;;141:558:8;;;;5380:18:2;;5376:86;;141:558:8;5475:16:2;;;5471:86;;5997:540;141:558:8;;;;;;;;;;;6244:19:2;;;;6240:115;;141:558:8;;;;;6987:25:2;141:558:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;6987:25:2;5297:300::o;6240:115::-;141:558:8;;-1:-1:-1;;;6290:50:2;;-1:-1:-1;;;;;141:558:8;;;;6290:50:2;;;141:558:8;;;;;;;;;;;;;;;;6290:50:2;5471:86;141:558:8;;-1:-1:-1;;;5514:32:2;;5396:1;5514:32;;;141:558:8;;;5514:32:2;5376:86;141:558:8;;-1:-1:-1;;;5421:30:2;;5396:1;5421:30;;;141:558:8;;;5421:30:2",
  "source": "pragma solidity ^0.8.21;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract StableToken is ERC20, Ownable{\r\n    constructor(string memory name_, string memory symbol_,address initialOwner) \r\n        ERC20(name_, symbol_)\r\n        Ownable(initialOwner)\r\n    {\r\n        // no intial supply only money market will mint as needed\r\n    }\r\n\r\n    //Only owner(MoneyMarket) can call\r\n    function mint(address to, uint256 amount) external onlyOwner{\r\n        _mint(to,amount);\r\n    }\r\n\r\n    //Only owner(MoneyMarket) can call\r\n    function burn(address from, uint256 amount) external onlyOwner{\r\n        _burn(from,amount);\r\n    }\r\n}\r\n",
  "sourcePath": "D:\\my-dapp\\contracts\\StableToken.sol",
  "ast": {
    "absolutePath": "project:/contracts/StableToken.sol",
    "exportedSymbols": {
      "Context": [
        933
      ],
      "ERC20": [
        799
      ],
      "IERC20": [
        877
      ],
      "IERC20Errors": [
        189
      ],
      "IERC20Metadata": [
        903
      ],
      "Ownable": [
        147
      ],
      "StableToken": [
        1948
      ]
    },
    "id": 1949,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1894,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:8"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 1895,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1949,
        "sourceUnit": 800,
        "src": "28:55:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1896,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1949,
        "sourceUnit": 148,
        "src": "85:52:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1897,
              "name": "ERC20",
              "nameLocations": [
                "165:5:8"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 799,
              "src": "165:5:8"
            },
            "id": 1898,
            "nodeType": "InheritanceSpecifier",
            "src": "165:5:8"
          },
          {
            "baseName": {
              "id": 1899,
              "name": "Ownable",
              "nameLocations": [
                "172:7:8"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 147,
              "src": "172:7:8"
            },
            "id": 1900,
            "nodeType": "InheritanceSpecifier",
            "src": "172:7:8"
          }
        ],
        "canonicalName": "StableToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1948,
        "linearizedBaseContracts": [
          1948,
          147,
          799,
          189,
          903,
          877,
          933
        ],
        "name": "StableToken",
        "nameLocation": "150:11:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1916,
              "nodeType": "Block",
              "src": "331:75:8",
              "statements": []
            },
            "id": 1917,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1909,
                    "name": "name_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1902,
                    "src": "279:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 1910,
                    "name": "symbol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1904,
                    "src": "286:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 1911,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1908,
                  "name": "ERC20",
                  "nameLocations": [
                    "273:5:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 799,
                  "src": "273:5:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "273:21:8"
              },
              {
                "arguments": [
                  {
                    "id": 1913,
                    "name": "initialOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1906,
                    "src": "312:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1914,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1912,
                  "name": "Ownable",
                  "nameLocations": [
                    "304:7:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "304:7:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "304:21:8"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1902,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "212:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1917,
                  "src": "198:19:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1901,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "198:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1904,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "233:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1917,
                  "src": "219:21:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1903,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "219:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1906,
                  "mutability": "mutable",
                  "name": "initialOwner",
                  "nameLocation": "249:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1917,
                  "src": "241:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1905,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "241:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "197:65:8"
            },
            "returnParameters": {
              "id": 1915,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "331:0:8"
            },
            "scope": 1948,
            "src": "186:220:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1931,
              "nodeType": "Block",
              "src": "514:35:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1927,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1919,
                        "src": "531:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1928,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1921,
                        "src": "534:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1926,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 639,
                      "src": "525:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "525:16:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1930,
                  "nodeType": "ExpressionStatement",
                  "src": "525:16:8"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "id": 1932,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1924,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1923,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "505:9:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "505:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "505:9:8"
              }
            ],
            "name": "mint",
            "nameLocation": "463:4:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1922,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1919,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "476:2:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1932,
                  "src": "468:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1918,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "468:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1921,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "488:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1932,
                  "src": "480:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1920,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "480:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "467:28:8"
            },
            "returnParameters": {
              "id": 1925,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "514:0:8"
            },
            "scope": 1948,
            "src": "454:95:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1946,
              "nodeType": "Block",
              "src": "659:37:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1942,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1934,
                        "src": "676:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1943,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1936,
                        "src": "681:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1941,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 672,
                      "src": "670:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "670:18:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1945,
                  "nodeType": "ExpressionStatement",
                  "src": "670:18:8"
                }
              ]
            },
            "functionSelector": "9dc29fac",
            "id": 1947,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1939,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1938,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "650:9:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "650:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "650:9:8"
              }
            ],
            "name": "burn",
            "nameLocation": "606:4:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1937,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1934,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "619:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1947,
                  "src": "611:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1933,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "611:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1936,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "633:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1947,
                  "src": "625:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1935,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "625:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "610:30:8"
            },
            "returnParameters": {
              "id": 1940,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "659:0:8"
            },
            "scope": 1948,
            "src": "597:99:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1949,
        "src": "141:558:8",
        "usedErrors": [
          13,
          18,
          159,
          164,
          169,
          178,
          183,
          188
        ],
        "usedEvents": [
          24,
          811,
          820
        ]
      }
    ],
    "src": "0:701:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.21+commit.d9974bed.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-10-24T02:49:17.521Z",
  "devdoc": {
    "errors": {
      "ERC20InsufficientAllowance(address,uint256,uint256)": [
        {
          "details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
          "params": {
            "allowance": "Amount of tokens a `spender` is allowed to operate with.",
            "needed": "Minimum amount required to perform a transfer.",
            "spender": "Address that may be allowed to operate on tokens without being their owner."
          }
        }
      ],
      "ERC20InsufficientBalance(address,uint256,uint256)": [
        {
          "details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
          "params": {
            "balance": "Current balance for the interacting account.",
            "needed": "Minimum amount required to perform a transfer.",
            "sender": "Address whose tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidApprover(address)": [
        {
          "details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
          "params": {
            "approver": "Address initiating an approval operation."
          }
        }
      ],
      "ERC20InvalidReceiver(address)": [
        {
          "details": "Indicates a failure with the token `receiver`. Used in transfers.",
          "params": {
            "receiver": "Address to which tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidSender(address)": [
        {
          "details": "Indicates a failure with the token `sender`. Used in transfers.",
          "params": {
            "sender": "Address whose tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidSpender(address)": [
        {
          "details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
          "params": {
            "spender": "Address that may be allowed to operate on tokens without being their owner."
          }
        }
      ],
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "Returns the value of tokens owned by `account`."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "Returns the value of tokens in existence."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}