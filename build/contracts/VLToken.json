{
  "contractName": "VLToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "initialSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/VolatileToken.sol\":\"VLToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"project:/contracts/VolatileToken.sol\":{\"keccak256\":\"0x034f608fcb91fb017625b22360a0d50055438017f7e630f0c8f2bbc9602a2865\",\"urls\":[\"bzz-raw://7aaf5bd516b6fb5d3fe0fda634a039948761d2d021b0adfa9bdc71c9116a9545\",\"dweb:/ipfs/Qmbz7KVTRqQhm4rpxowGZ2npFBdtHe7wkzB9FhhdkEGz8S\"]}},\"version\":1}",
  "bytecode": "0x60406080815234620003845762000ab4803803806200001e8162000388565b9283398101606082820312620003845781516001600160401b03929083811162000384578262000050918301620003ae565b60209283830151858111620003845786916200006e918501620003ae565b9201519381518181116200028f576003908154906001948583811c9316801562000379575b8884101462000365578190601f9384811162000312575b508890848311600114620002af575f92620002a3575b50505f1982851b1c191690851b1782555b84519283116200028f5760049485548581811c9116801562000284575b88821014620002715782811162000229575b5086918411600114620001c2579383949184925f95620001b6575b50501b925f19911b1c19161781555b3315620001a057600254908382018092116200018d57505f917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9160025533835282815284832084815401905584519384523393a35161069590816200041f8239f35b601190634e487b7160e01b5f525260245ffd5b6024905f85519163ec442f0560e01b8352820152fd5b015193505f806200011b565b9190601f19841692865f5284885f20945f5b8a89838310620002115750505010620001f7575b50505050811b0181556200012a565b01519060f8845f19921b161c191690555f808080620001e8565b868601518955909701969485019488935001620001d4565b865f52875f208380870160051c8201928a881062000267575b0160051c019086905b8281106200025b57505062000100565b5f81550186906200024b565b9250819262000242565b602287634e487b7160e01b5f525260245ffd5b90607f1690620000ee565b634e487b7160e01b5f52604160045260245ffd5b015190505f80620000c0565b90879350601f19831691865f528a5f20925f5b8c828210620002fb5750508411620002e3575b505050811b018255620000d1565b01515f1983871b60f8161c191690555f8080620002d5565b8385015186558b97909501949384019301620002c2565b909150845f52885f208480850160051c8201928b86106200035b575b918991869594930160051c01915b8281106200034c575050620000aa565b5f81558594508991016200033c565b925081926200032e565b634e487b7160e01b5f52602260045260245ffd5b92607f169262000093565b5f80fd5b6040519190601f01601f191682016001600160401b038111838210176200028f57604052565b919080601f84011215620003845782516001600160401b0381116200028f57602090620003e4601f8201601f1916830162000388565b9281845282828701011162000384575f5b8181106200040a5750825f9394955001015290565b8581018301518482018401528201620003f556fe6080604081815260049182361015610015575f80fd5b5f92833560e01c91826306fdde031461043557508163095ea7b31461038757816318160ddd1461036857816323b872dd14610272578163313ce5671461025657816370a082311461021f57816395d89b411461010057508063a9059cbb146100d05763dd62ed3e14610085575f80fd5b346100cc57806003193601126100cc57806020926100a1610554565b6100a961056e565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b50346100cc57806003193601126100cc576020906100f96100ef610554565b6024359033610584565b5160018152f35b8383346100cc57816003193601126100cc57805190828454600181811c90808316928315610215575b6020938484108114610202578388529081156101e65750600114610191575b505050829003601f01601f191682019267ffffffffffffffff84118385101761017e575082918261017a92528261050d565b0390f35b634e487b7160e01b815260418552602490fd5b8787529192508591837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8385106101d25750505050830101858080610148565b8054888601830152930192849082016101bc565b60ff1916878501525050151560051b8401019050858080610148565b634e487b7160e01b895260228a52602489fd5b91607f1691610129565b5050346100cc5760203660031901126100cc5760209181906001600160a01b03610247610554565b16815280845220549051908152f35b5050346100cc57816003193601126100cc576020905160128152f35b905082346103655760603660031901126103655761028e610554565b61029661056e565b916044359360018060a01b038316808352600160205286832033845260205286832054915f1983106102d1575b6020886100f9898989610584565b86831061033957811561032257331561030b575082526001602090815286832033845281529186902090859003905582906100f9876102c3565b8751634a1406b160e11b8152908101849052602490fd5b875163e602df0560e01b8152908101849052602490fd5b8751637dc7a0d960e11b8152339181019182526020820193909352604081018790528291506060010390fd5b80fd5b5050346100cc57816003193601126100cc576020906002549051908152f35b9050346104315781600319360112610431576103a1610554565b60243590331561041a576001600160a01b031691821561040357508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8351634a1406b160e11b8152908101859052602490fd5b835163e602df0560e01b8152808401869052602490fd5b8280fd5b8490843461043157826003193601126104315782600354600181811c90808316928315610503575b6020938484108114610202578388529081156101e657506001146104ad57505050829003601f01601f191682019267ffffffffffffffff84118385101761017e575082918261017a92528261050d565b600387529192508591837fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8385106104ef5750505050830101858080610148565b8054888601830152930192849082016104d9565b91607f169161045d565b602080825282518183018190529093925f5b82811061054057505060409293505f838284010152601f8019910116010190565b81810186015184820160400152850161051f565b600435906001600160a01b038216820361056a57565b5f80fd5b602435906001600160a01b038216820361056a57565b916001600160a01b03808416928315610647571692831561062f575f90838252816020526040822054908382106105fd575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60405163ec442f0560e01b81525f6004820152602490fd5b604051634b637e8f60e11b81525f6004820152602490fdfea26469706673582212202cba8a8a845eb8a06e9a95c50c7bb459b021835b5d4ed5d644f45483011b52ea64736f6c63430008150033",
  "deployedBytecode": "0x6080604081815260049182361015610015575f80fd5b5f92833560e01c91826306fdde031461043557508163095ea7b31461038757816318160ddd1461036857816323b872dd14610272578163313ce5671461025657816370a082311461021f57816395d89b411461010057508063a9059cbb146100d05763dd62ed3e14610085575f80fd5b346100cc57806003193601126100cc57806020926100a1610554565b6100a961056e565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b50346100cc57806003193601126100cc576020906100f96100ef610554565b6024359033610584565b5160018152f35b8383346100cc57816003193601126100cc57805190828454600181811c90808316928315610215575b6020938484108114610202578388529081156101e65750600114610191575b505050829003601f01601f191682019267ffffffffffffffff84118385101761017e575082918261017a92528261050d565b0390f35b634e487b7160e01b815260418552602490fd5b8787529192508591837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8385106101d25750505050830101858080610148565b8054888601830152930192849082016101bc565b60ff1916878501525050151560051b8401019050858080610148565b634e487b7160e01b895260228a52602489fd5b91607f1691610129565b5050346100cc5760203660031901126100cc5760209181906001600160a01b03610247610554565b16815280845220549051908152f35b5050346100cc57816003193601126100cc576020905160128152f35b905082346103655760603660031901126103655761028e610554565b61029661056e565b916044359360018060a01b038316808352600160205286832033845260205286832054915f1983106102d1575b6020886100f9898989610584565b86831061033957811561032257331561030b575082526001602090815286832033845281529186902090859003905582906100f9876102c3565b8751634a1406b160e11b8152908101849052602490fd5b875163e602df0560e01b8152908101849052602490fd5b8751637dc7a0d960e11b8152339181019182526020820193909352604081018790528291506060010390fd5b80fd5b5050346100cc57816003193601126100cc576020906002549051908152f35b9050346104315781600319360112610431576103a1610554565b60243590331561041a576001600160a01b031691821561040357508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8351634a1406b160e11b8152908101859052602490fd5b835163e602df0560e01b8152808401869052602490fd5b8280fd5b8490843461043157826003193601126104315782600354600181811c90808316928315610503575b6020938484108114610202578388529081156101e657506001146104ad57505050829003601f01601f191682019267ffffffffffffffff84118385101761017e575082918261017a92528261050d565b600387529192508591837fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8385106104ef5750505050830101858080610148565b8054888601830152930192849082016104d9565b91607f169161045d565b602080825282518183018190529093925f5b82811061054057505060409293505f838284010152601f8019910116010190565b81810186015184820160400152850161051f565b600435906001600160a01b038216820361056a57565b5f80fd5b602435906001600160a01b038216820361056a57565b916001600160a01b03808416928315610647571692831561062f575f90838252816020526040822054908382106105fd575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60405163ec442f0560e01b81525f6004820152602490fd5b604051634b637e8f60e11b81525f6004820152602490fdfea26469706673582212202cba8a8a845eb8a06e9a95c50c7bb459b021835b5d4ed5d644f45483011b52ea64736f6c63430008150033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "152:279:9:-:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;152:279:9;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;1648:13:2;152:279:9;;;;;;;;;;;;;;;;-1:-1:-1;152:279:9;;;;;;;;;;;;;;;-1:-1:-1;152:279:9;;;;;;;;;;-1:-1:-1;152:279:9;;;;-1:-1:-1;;;;152:279:9;;;;;;;;;;;;;;;;;;;;1671:17:2;152:279:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;152:279:9;;;;;;;;;;;;;;;;;;;395:10;7432:21:2;7428:91;;6137:21;152:279:9;;;;;;;;;;;-1:-1:-1;152:279:9;6987:25:2;152:279:9;6137:21:2;152:279:9;395:10;152:279;;;;;;;;;;;;;;;;;;;395:10;6987:25:2;;152:279:9;;;;;;;;;;;;;;-1:-1:-1;152:279:9;;;-1:-1:-1;152:279:9;7428:91:2;152:279:9;;-1:-1:-1;152:279:9;;7476:32:2;;;;;;;;152:279:9;7476:32:2;152:279:9;;;;-1:-1:-1;152:279:9;;;;;;;;;;;;;-1:-1:-1;152:279:9;;;-1:-1:-1;152:279:9;;-1:-1:-1;152:279:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;152:279:9;;;;;-1:-1:-1;152:279:9;;-1:-1:-1;152:279:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;152:279:9;;;;;;;;;;;;;;;;;;;;-1:-1:-1;152:279:9;;;-1:-1:-1;152:279:9;;;;;;;;;;;;-1:-1:-1;152:279:9;;1671:17:2;152:279:9;;-1:-1:-1;152:279:9;;;;;-1:-1:-1;152:279:9;;;;;;;;;;;;;;;-1:-1:-1;152:279:9;;-1:-1:-1;152:279:9;;-1:-1:-1;152:279:9;;;;;;;;;;-1:-1:-1;152:279:9;;;;;;;;;;;;;;;;-1:-1:-1;;152:279:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;152:279:9;;-1:-1:-1;152:279:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;152:279:9;;;;-1:-1:-1;152:279:9;;;;;;;;;;;;;;;;-1:-1:-1;152:279:9;;;;;-1:-1:-1;152:279:9;;;;;;;;;-1:-1:-1;152:279:9;;;;;;;;;-1:-1:-1;;152:279:9;;;-1:-1:-1;;;;;152:279:9;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;152:279:9;;;;;;;;;;-1:-1:-1;;152:279:9;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;152:279:9;;;;;;;;-1:-1:-1;152:279:9;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "152:279:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;152:279:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3388:5:2;152:279:9;;:::i;:::-;;;735:10:5;;3388:5:2;:::i;:::-;152:279:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;152:279:9;;;;;-1:-1:-1;;152:279:9;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;152:279:9;;;;;;;;;;;;;;-1:-1:-1;152:279:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;152:279:9;;;;;-1:-1:-1;;152:279:9;;;;;;;;-1:-1:-1;152:279:9;;;;;;-1:-1:-1;;;152:279:9;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;152:279:9;;;;;;;;-1:-1:-1;;;;;152:279:9;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2761:2:2;152:279:9;;;;;;;;;;;;-1:-1:-1;;152:279:9;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;735:10:5;152:279:9;;;;;;;;10503:17:2;;;10484:36;;10480:309;;152:279:9;;4890:5:2;;;;;;:::i;10480:309::-;10540:24;;;10536:130;;9717:19;;9713:89;;735:10:5;9815:21:2;9811:90;;-1:-1:-1;152:279:9;;;;;;;;;;735:10:5;152:279:9;;;;;;;;;;;;;;;;4890:5:2;10480:309;;;9811:90;152:279:9;;-1:-1:-1;;;9859:31:2;;;;;152:279:9;;;;;9859:31:2;9713:89;152:279:9;;-1:-1:-1;;;9759:32:2;;;;;152:279:9;;;;;9759:32:2;10536:130;152:279:9;;-1:-1:-1;;;10591:60:2;;735:10:5;10591:60:2;;;152:279:9;;;;;;;;;;;;;;;;;;-1:-1:-1;152:279:9;;10591:60:2;;;152:279:9;;;;;;;;;;;;;;;;;;;2881:12:2;152:279:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;735:10:5;;9717:19:2;9713:89;;-1:-1:-1;;;;;152:279:9;;9815:21:2;;9811:90;;735:10:5;;;152:279:9;735:10:5;;152:279:9;;8746:4:2;152:279:9;;;;;;;;;;;;;;;;;9989:31:2;735:10:5;;9989:31:2;;152:279:9;8746:4:2;152:279:9;;;9811:90:2;152:279:9;;-1:-1:-1;;;9859:31:2;;;;;152:279:9;;;;;9859:31:2;9713:89;152:279:9;;-1:-1:-1;;;9759:32:2;;;;;152:279:9;;;;;9759:32:2;152:279:9;;;;;;;;;;;;;;;;;;;;1837:5:2;152:279:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;152:279:9;;;;;-1:-1:-1;;152:279:9;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1837:5:2;152:279:9;;;;-1:-1:-1;152:279:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;152:279:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;152:279:9;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;152:279:9;;;;;;:::o;5297:300:2:-;;-1:-1:-1;;;;;152:279:9;;;;5380:18:2;;5376:86;;152:279:9;5475:16:2;;;5471:86;;5997:540;152:279:9;;;;;;;;;;;6244:19:2;;;;6240:115;;152:279:9;;;;;6987:25:2;152:279:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;6987:25:2;5297:300::o;6240:115::-;152:279:9;;-1:-1:-1;;;6290:50:2;;-1:-1:-1;;;;;152:279:9;;;;6290:50:2;;;152:279:9;;;;;;;;;;;;;;;;10591:60:2;5471:86;152:279:9;;-1:-1:-1;;;5514:32:2;;5396:1;5514:32;;;152:279:9;;;5514:32:2;5376:86;152:279:9;;-1:-1:-1;;;5421:30:2;;5396:1;5421:30;;;152:279:9;;;5421:30:2",
  "source": "pragma solidity ^0.8.21;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\n// Volatile token contract, used as collateral in MoneyMarket\r\n\r\ncontract VLToken is ERC20 {\r\n    constructor(string memory name_, string memory symbol_, uint256 initialSupply) ERC20(name_,symbol_){\r\n        //initialSupply must be multiplied by 10 ** decimals before passing it (token units)\r\n        _mint(msg.sender,initialSupply);\r\n    }\r\n}\r\n\r\n",
  "sourcePath": "D:\\my-dapp\\contracts\\VolatileToken.sol",
  "ast": {
    "absolutePath": "project:/contracts/VolatileToken.sol",
    "exportedSymbols": {
      "Context": [
        933
      ],
      "ERC20": [
        799
      ],
      "IERC20": [
        877
      ],
      "IERC20Errors": [
        189
      ],
      "IERC20Metadata": [
        903
      ],
      "VLToken": [
        1993
      ]
    },
    "id": 1994,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1969,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:9"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 1970,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1994,
        "sourceUnit": 800,
        "src": "28:55:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1971,
              "name": "ERC20",
              "nameLocations": [
                "172:5:9"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 799,
              "src": "172:5:9"
            },
            "id": 1972,
            "nodeType": "InheritanceSpecifier",
            "src": "172:5:9"
          }
        ],
        "canonicalName": "VLToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1993,
        "linearizedBaseContracts": [
          1993,
          799,
          189,
          903,
          877,
          933
        ],
        "name": "VLToken",
        "nameLocation": "161:7:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1991,
              "nodeType": "Block",
              "src": "284:144:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1986,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "395:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "399:6:9",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "395:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1988,
                        "name": "initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1978,
                        "src": "406:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1985,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 639,
                      "src": "389:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "389:31:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1990,
                  "nodeType": "ExpressionStatement",
                  "src": "389:31:9"
                }
              ]
            },
            "id": 1992,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1981,
                    "name": "name_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1974,
                    "src": "270:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 1982,
                    "name": "symbol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1976,
                    "src": "276:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 1983,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1980,
                  "name": "ERC20",
                  "nameLocations": [
                    "264:5:9"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 799,
                  "src": "264:5:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "264:20:9"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1974,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "211:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1992,
                  "src": "197:19:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1973,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "197:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1976,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "232:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1992,
                  "src": "218:21:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1975,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "218:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1978,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nameLocation": "249:13:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1992,
                  "src": "241:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1977,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "241:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "196:67:9"
            },
            "returnParameters": {
              "id": 1984,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "284:0:9"
            },
            "scope": 1993,
            "src": "185:243:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1994,
        "src": "152:279:9",
        "usedErrors": [
          159,
          164,
          169,
          178,
          183,
          188
        ],
        "usedEvents": [
          811,
          820
        ]
      }
    ],
    "src": "0:435:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.21+commit.d9974bed.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-10-24T03:08:14.369Z",
  "devdoc": {
    "errors": {
      "ERC20InsufficientAllowance(address,uint256,uint256)": [
        {
          "details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
          "params": {
            "allowance": "Amount of tokens a `spender` is allowed to operate with.",
            "needed": "Minimum amount required to perform a transfer.",
            "spender": "Address that may be allowed to operate on tokens without being their owner."
          }
        }
      ],
      "ERC20InsufficientBalance(address,uint256,uint256)": [
        {
          "details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
          "params": {
            "balance": "Current balance for the interacting account.",
            "needed": "Minimum amount required to perform a transfer.",
            "sender": "Address whose tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidApprover(address)": [
        {
          "details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
          "params": {
            "approver": "Address initiating an approval operation."
          }
        }
      ],
      "ERC20InvalidReceiver(address)": [
        {
          "details": "Indicates a failure with the token `receiver`. Used in transfers.",
          "params": {
            "receiver": "Address to which tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidSender(address)": [
        {
          "details": "Indicates a failure with the token `sender`. Used in transfers.",
          "params": {
            "sender": "Address whose tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidSpender(address)": [
        {
          "details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
          "params": {
            "spender": "Address that may be allowed to operate on tokens without being their owner."
          }
        }
      ]
    },
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "Returns the value of tokens owned by `account`."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "Returns the value of tokens in existence."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}