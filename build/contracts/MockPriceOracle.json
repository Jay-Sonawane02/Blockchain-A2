{
  "contractName": "MockPriceOracle",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initialOwner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "PriceUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "prices",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "setAssetPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getAssetPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"PriceUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getAssetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"prices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"setAssetPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/MockPriceOracle.sol\":\"MockPriceOracle\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"project:/contracts/MockPriceOracle.sol\":{\"keccak256\":\"0xe5a86b58bebd31cd7dc21dac270845eee4157a0df5947d479c7359bbb72c1eba\",\"urls\":[\"bzz-raw://721e736876ef07e2468eb4769dd142fe52103c0590dd4816a92f09a9a2a46f57\",\"dweb:/ipfs/QmUUkZW1d2x3J7zQq9f3fj7GBVPPrndASX7U8HoqoBLcJe\"]}},\"version\":1}",
  "bytecode": "0x6080346100b957601f61035538819003918201601f19168301916001600160401b038311848410176100bd578084926020946040528339810103126100b957516001600160a01b0390818116908190036100b95780156100a1575f80546001600160a01b03198116831782556040519316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a361028390816100d28239f35b604051631e4fbdf760e01b81525f6004820152602490fd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe6040608081526004361015610012575f80fd5b5f90813560e01c806351323f72146101a1578063715018a6146101445780638da5cb5b1461011d578063b3596f07146100e6578063cfed246b146100e65763f2fde38b1461005e575f80fd5b346100e25760203660031901126100e257610077610208565b61007f610222565b6001600160a01b039081169182156100cb575082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b815260048101849052602490fd5b5080fd5b50346100e25760203660031901126100e25760209181906001600160a01b0361010d610208565b1681526001845220549051908152f35b50346100e257816003193601126100e257905490516001600160a01b039091168152602090f35b823461019e578060031936011261019e5761015d610222565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b50346100e257806003193601126100e2577f0d86730737b142fc160892fa8a0f2db687a92a0e294d1ad70624cf5acef03b8460206101dd610208565b602435906101e9610222565b6001600160a01b0316808652600183528486208290559351908152a280f35b600435906001600160a01b038216820361021e57565b5f80fd5b5f546001600160a01b0316330361023557565b60405163118cdaa760e01b8152336004820152602490fdfea2646970667358221220d860e3b7ec48765567b065f9b069f1479f2a1e28faf679a48b6bc4af357e7eff64736f6c63430008150033",
  "deployedBytecode": "0x6040608081526004361015610012575f80fd5b5f90813560e01c806351323f72146101a1578063715018a6146101445780638da5cb5b1461011d578063b3596f07146100e6578063cfed246b146100e65763f2fde38b1461005e575f80fd5b346100e25760203660031901126100e257610077610208565b61007f610222565b6001600160a01b039081169182156100cb575082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b815260048101849052602490fd5b5080fd5b50346100e25760203660031901126100e25760209181906001600160a01b0361010d610208565b1681526001845220549051908152f35b50346100e257816003193601126100e257905490516001600160a01b039091168152602090f35b823461019e578060031936011261019e5761015d610222565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b50346100e257806003193601126100e2577f0d86730737b142fc160892fa8a0f2db687a92a0e294d1ad70624cf5acef03b8460206101dd610208565b602435906101e9610222565b6001600160a01b0316808652600183528486208290559351908152a280f35b600435906001600160a01b038216820361021e57565b5f80fd5b5f546001600160a01b0316330361023557565b60405163118cdaa760e01b8152336004820152602490fdfea2646970667358221220d860e3b7ec48765567b065f9b069f1479f2a1e28faf679a48b6bc4af357e7eff64736f6c63430008150033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "84:593:6:-:0;;;;;;;;;;;;;-1:-1:-1;;84:593:6;;;;-1:-1:-1;;;;;84:593:6;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;84:593:6;;;;;;;;;;1273:26:0;;1269:95;;-1:-1:-1;84:593:6;;-1:-1:-1;;;;;;84:593:6;;;;;;;;;;;3052:40:0;;-1:-1:-1;3052:40:0;84:593:6;;;;;;;1269:95:0;84:593:6;;-1:-1:-1;;;1322:31:0;;-1:-1:-1;1322:31:0;;;84:593:6;;;1322:31:0;84:593:6;-1:-1:-1;84:593:6;;;;;;-1:-1:-1;84:593:6;;;;;-1:-1:-1;84:593:6",
  "deployedSourceMap": "84:593:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;84:593:6;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;84:593:6;;;;2627:22:0;;2623:91;;-1:-1:-1;84:593:6;;-1:-1:-1;;;;;;84:593:6;;;;;;;3052:40:0;84:593:6;;3052:40:0;84:593:6;;2623:91:0;84:593:6;-1:-1:-1;;;2672:31:0;;84:593:6;2672:31:0;;84:593:6;;;;;2672:31:0;84:593:6;;;;;;;;;;;-1:-1:-1;;84:593:6;;;;;;;;-1:-1:-1;;;;;84:593:6;;:::i;:::-;;;;227:41;84:593;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;84:593:6;;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;84:593:6;;-1:-1:-1;;;;;;84:593:6;;;;;;-1:-1:-1;;;;;84:593:6;3052:40:0;84:593:6;;3052:40:0;84:593:6;;;;;;;;;;;;;;;;;;492:25;84:593;;;:::i;:::-;;;1500:62:0;;;:::i;:::-;-1:-1:-1;;;;;84:593:6;;;;;;;;;;;;;;;;;;492:25;84:593;;;;;;-1:-1:-1;;;;;84:593:6;;;;;;:::o;:::-;;;;1796:162:0;1710:6;84:593:6;-1:-1:-1;;;;;84:593:6;735:10:5;1855:23:0;1851:101;;1796:162::o;1851:101::-;84:593:6;;-1:-1:-1;;;1901:40:0;;735:10:5;1901:40:0;;;84:593:6;;;1901:40:0",
  "source": "pragma solidity ^0.8.21;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract MockPriceOracle is Ownable{\r\n\r\n    constructor(address initialOwner) Ownable(initialOwner){}\r\n    \r\n    //token to price mapping\r\n    mapping(address => uint256) public prices;\r\n\r\n    event PriceUpdated(address indexed token, uint256 price);\r\n\r\n    //set USD price for token\r\n    function setAssetPrice(address token, uint256 price) external onlyOwner{\r\n        prices[token] = price;\r\n        emit PriceUpdated(token,price);\r\n    }\r\n\r\n    //get USD price of a token\r\n    function getAssetPrice(address token) external view returns (uint256) {\r\n        return prices[token];\r\n    }\r\n}",
  "sourcePath": "D:\\my-dapp\\contracts\\MockPriceOracle.sol",
  "ast": {
    "absolutePath": "project:/contracts/MockPriceOracle.sol",
    "exportedSymbols": {
      "Context": [
        933
      ],
      "MockPriceOracle": [
        991
      ],
      "Ownable": [
        147
      ]
    },
    "id": 992,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 935,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:6"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 936,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 992,
        "sourceUnit": 148,
        "src": "28:52:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 937,
              "name": "Ownable",
              "nameLocations": [
                "112:7:6"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 147,
              "src": "112:7:6"
            },
            "id": 938,
            "nodeType": "InheritanceSpecifier",
            "src": "112:7:6"
          }
        ],
        "canonicalName": "MockPriceOracle",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 991,
        "linearizedBaseContracts": [
          991,
          147,
          933
        ],
        "name": "MockPriceOracle",
        "nameLocation": "93:15:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 946,
              "nodeType": "Block",
              "src": "183:2:6",
              "statements": []
            },
            "id": 947,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 943,
                    "name": "initialOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 940,
                    "src": "170:12:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 944,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 942,
                  "name": "Ownable",
                  "nameLocations": [
                    "162:7:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "162:7:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "162:21:6"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 941,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 940,
                  "mutability": "mutable",
                  "name": "initialOwner",
                  "nameLocation": "148:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 947,
                  "src": "140:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 939,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "140:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "139:22:6"
            },
            "returnParameters": {
              "id": 945,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "183:0:6"
            },
            "scope": 991,
            "src": "128:57:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cfed246b",
            "id": 951,
            "mutability": "mutable",
            "name": "prices",
            "nameLocation": "262:6:6",
            "nodeType": "VariableDeclaration",
            "scope": 991,
            "src": "227:41:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 950,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 948,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "235:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "227:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 949,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "246:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "0d86730737b142fc160892fa8a0f2db687a92a0e294d1ad70624cf5acef03b84",
            "id": 957,
            "name": "PriceUpdated",
            "nameLocation": "283:12:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 953,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "312:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 957,
                  "src": "296:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 952,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "296:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 955,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "327:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 957,
                  "src": "319:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 954,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "319:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "295:38:6"
            },
            "src": "277:57:6"
          },
          {
            "body": {
              "id": 977,
              "nodeType": "Block",
              "src": "444:81:6",
              "statements": [
                {
                  "expression": {
                    "id": 970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 966,
                        "name": "prices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 951,
                        "src": "455:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 968,
                      "indexExpression": {
                        "id": 967,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 959,
                        "src": "462:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "455:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 969,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 961,
                      "src": "471:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "455:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 971,
                  "nodeType": "ExpressionStatement",
                  "src": "455:21:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 973,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 959,
                        "src": "505:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 974,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 961,
                        "src": "511:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 972,
                      "name": "PriceUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 957,
                      "src": "492:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "492:25:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 976,
                  "nodeType": "EmitStatement",
                  "src": "487:30:6"
                }
              ]
            },
            "functionSelector": "51323f72",
            "id": 978,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 964,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 963,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "435:9:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "435:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "435:9:6"
              }
            ],
            "name": "setAssetPrice",
            "nameLocation": "382:13:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 959,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "404:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 978,
                  "src": "396:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 958,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "396:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 961,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "419:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 978,
                  "src": "411:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 960,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "411:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "395:30:6"
            },
            "returnParameters": {
              "id": 965,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "444:0:6"
            },
            "scope": 991,
            "src": "373:152:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 989,
              "nodeType": "Block",
              "src": "635:39:6",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 985,
                      "name": "prices",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 951,
                      "src": "653:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 987,
                    "indexExpression": {
                      "id": 986,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 980,
                      "src": "660:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "653:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 984,
                  "id": 988,
                  "nodeType": "Return",
                  "src": "646:20:6"
                }
              ]
            },
            "functionSelector": "b3596f07",
            "id": 990,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAssetPrice",
            "nameLocation": "574:13:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 981,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 980,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "596:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 990,
                  "src": "588:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 979,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "588:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "587:15:6"
            },
            "returnParameters": {
              "id": 984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 983,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 990,
                  "src": "626:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 982,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "626:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "625:9:6"
            },
            "scope": 991,
            "src": "565:109:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 992,
        "src": "84:593:6",
        "usedErrors": [
          13,
          18
        ],
        "usedEvents": [
          24,
          957
        ]
      }
    ],
    "src": "0:677:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.21+commit.d9974bed.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-10-24T02:49:17.517Z",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}